@startuml

title Toolshop

abstract class ObjectPool <<interface>>
{
    + get(string)
    + get()
    + release()
    + shutdown()
}

class ToolshopInventory
{
    -List[Tool] inventory
    -ToolshopInventory()
    +{static} ToolshopInventory getInstance()
    +Tool checkoutTool()
    +returnTool(Tool)
}
Tool "24" -right-o ToolshopInventory

ObjectPool <|-down- ToolshopInventory
ObjectPool <|-down- CustomerPool

class RentalRecord
{
    -Customer renter
    -List[Purchasable] toolsRented
    +RentalRecord()
    +List[Purchasable] getTools()
}

Store "1" *-- "*" RentalRecord
RentalRecord "1" o-- "1" Customer

class Store
{
    -{static} Store instance
    -Store()
    -ToolshopInventory inventory
    -List[RentalRecord] rentalRecords
    +{static} Store getInstance()
    + update()
}

Store "1" *-- "1" ToolshopInventory



class Tool
{
    #ToolCategory cat
    +Tool()
    +setCategory(ToolCategory)
    +int getPrice()
}

abstract class ToolCategory
{
    #int basePrice
    +ToolCategory(int)
    +int getBasePrice()
}

Tool -right- "1" ToolCategory: strategy

class Painting
{
    +Painting()
}
class Concrete
{
    +Concrete()
}
class Plumbing
{
    +Plumbing()
}
class Woodwork
{
    +Woodwork()
}
class Yardwork
{
    +Yardwork()
}

ToolCategory <|-down- Painting
ToolCategory <|-down- Concrete
ToolCategory <|-down- Plumbing
ToolCategory <|-down- Woodwork
ToolCategory <|-down- Yardwork

abstract class Purchasable
{
    -List[Purchaseable] options
    +int getCost()

}

Purchasable <|-down- Tool

abstract class PurchaseDecorator
{
    +int getPrice()
}

Purchasable <|-down- PurchaseDecorator

class ExtensionCord
class AccessoryKit
class ProtectiveGearPackage

class ToolDecoratorAdder
{
    - Tool tool
}

PurchaseDecorator <|-down- ExtensionCord
PurchaseDecorator <|-down- AccessoryKit
PurchaseDecorator <|-down- ProtectiveGearPackage
PurchaseDecorator <|-down- ToolDecoratorAdder

ToolDecoratorAdder --> "1" Tool

PurchaseDecorator -- Purchasable: component

abstract class Customer
{
    #String name
    +{abstract} rentTools()
}
class CasualCustomer
class BusinessCustomer
class RegularCustomer

Customer <|-down- CasualCustomer
Customer <|-down- BusinessCustomer
Customer <|-down- RegularCustomer

abstract class Observable
{
    + registerObserver()
    + removeObserver()
    + notifyObservers()
    - List[Observer] observers
}

Observable <|-down- Customer

abstract class Observer <<interface>>
{
    + update()
}

Observer <|-down- Store

Observable --> "*" Observer: observers

class CustomerPool
{
    - CustomerPool()
    + getInstance()

    - List[Customer] customers
    + getCustomerToMakePurchase()
    + getCustomerToReturnItems()
}

class Main
{
    + main()
}

CustomerPool o-- "12" Customer
Main -- "1" CustomerPool
Main --> Customer

class SimpleToolFactory
{
    + createTool()
}

ToolshopInventory --> "1" SimpleToolFactory

@enduml